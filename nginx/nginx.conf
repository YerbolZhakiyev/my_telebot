worker_processes 1;

events { worker_connections 1024; }

http {
    sendfile on;
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream backend_servers {
        server backend:8000;
    }

    upstream grafana_servers {
        server grafana:3000;
    }

    server {
        listen 9113;
        server_name localhost;

        location /metrics {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;

            # Export Nginx metrics in the Prometheus format
            # You can customize the metrics using the log_format directive
            # See https://nginx.org/en/docs/http/ngx_http_log_module.html#log_format
            # for more information
            log_format prometheus '$remote_addr - $remote_user [$time_local]  '
                                 '"$request" $status $body_bytes_sent '
                                 '"$http_referer" "$http_user_agent" '
                                 '"$gzip_ratio"';
            access_log /var/log/nginx/access.log prometheus;
        }
    }

    server {

        listen 80;
        server_name localhost;
        access_log /var/log/nginx/access.log;
        access_log /var/log/nginx/status.log;

        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }

        location /grafana/{
            rewrite ^/grafana/(.*)$ /$1 break;
            proxy_pass http://grafana_servers;
            proxy_set_header Host $http_host;
        }

        location /grafana/api/live/ {
            rewrite  ^/grafana/(.*)$  /$1 break;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $http_host;
            proxy_pass http://grafana_servers;
        }

        location /api/ {
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://backend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location / {
            include  /etc/nginx/mime.types;
            root /html;
            index index.html;
        }
    }
}